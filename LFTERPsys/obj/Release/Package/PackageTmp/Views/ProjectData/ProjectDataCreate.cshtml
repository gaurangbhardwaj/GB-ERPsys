@model LFTERPsys.Models.ProjectDataModel

@{
    ViewBag.Title = "Add New Project";
    Layout = "~/Views/Shared/_Layout.cshtml";
}
@Styles.Render("~/Content/select2css")

<style>
    .blue-gradient-rgba {
        background: -webkit-linear-gradient(50deg,rgba(69,202,252,.9),rgba(48,63,159,.9)) !important;
        background: -o-linear-gradient(50deg,rgba(69,202,252,.9),rgba(48,63,159,.9)) !important;
        background: linear-gradient(40deg,rgba(69,202,252,.9),rgba(48,63,159,.9)) !important;
        background-color: rgba(0, 0, 0, 0);
        background-position-x: 0%;
        background-position-y: 0%;
        background-repeat: no-repeat;
        background-attachment: scroll;
        background-image: linear-gradient(40deg, rgba(69, 202, 252, 0.9), rgba(48, 63, 159, 0.9));
        background-size: auto;
        background-origin: padding-box;
        background-clip: border-box;
    }

    .body-content {
        margin: 0px;
        margin-top: 15px;
        padding: 0px 0px;
    }

    .body {
        padding: 0px 0px;
    }
</style>


@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()
    @Html.ValidationSummary(true, "", new { @class = "text-danger" })

    <div class="card gradient-card" style="border:none; ">
        <div class="card-image" style="background-image: url(/Images/fleximage.jpg)">
            <!-- Content -->
            <div class="text-white d-flex mask blue-gradient-rgba">
                <div class="first-content mx-auto p-4">
                    <h2 class="card-title">@ViewBag.Title</h2>
                </div>
            </div>
        </div>
    </div>

    <div class="container">

        <div class="row" style="padding-top:2em">

            <div class="col-md-3"></div>
            <div class="col-sm-2 text-nowrap">
                @Html.LabelFor(model => model.projid, htmlAttributes: new { @class = "control-label col-md-2" })
            </div>
            <div class="col-sm-4">
                @Html.EditorFor(model => model.projid, new { htmlAttributes = new { @class = "form-control"} })
                @Html.ValidationMessageFor(model => model.projid, "", new { @class = "text-danger" })
            </div>
            <div class="col-md-3"></div>
        </div>
        <div class="row" style="padding-top:2em">
            <div class="col-md-3"></div>
            <div class="col-sm-2 text-nowrap">
                @Html.LabelFor(model => model.projname, htmlAttributes: new { @class = "control-label col-md-2" })
            </div>
            <div class="col-sm-4">
                @Html.EditorFor(model => model.projname, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.projname, "", new { @class = "text-danger" })
            </div>
            <div class="col-md-3"></div>
        </div>

        <div class="row" style="padding-top:2em">

            <div class="col-md-3"></div>
            <div class="col-sm-2 text-nowrap">
                @Html.LabelFor(model => model.erpprojname, htmlAttributes: new { @class = "control-label col-md-2" })
            </div>
            <div class="col-sm-4">
                @Html.EditorFor(model => model.erpprojname, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.erpprojname, "", new { @class = "text-danger" })
            </div>
            <div class="col-md-3"></div>
        </div>

        <div class="row" style="padding-top:2em">
            <div class="col-md-3"></div>
            <div class="col-md-2 text-nowrap">
                @Html.LabelFor(model => model.depname, htmlAttributes: new { @class = "control-label col-md-2" })
            </div>
            <div class="col-md-4">
                @Html.DropDownListFor(model => model.depname, (IEnumerable<SelectListItem>)ViewBag.AllDepartmentName, "-- Select Department --", new { @class = "form-control search-box", required = "required" })
                @Html.ValidationMessageFor(model => model.depname, "", new { @class = "text-danger" })
            </div>
            <div class="col-md-3"></div>
        </div>

        <div class="row" style="padding-top:2em">
            <div class="col-md-3"></div>
            <div class="col-md-2 text-nowrap">
                @Html.LabelFor(model => model.projstatus, htmlAttributes: new { @class = "control-label col-md-2" })
            </div>
            <div class="col-md-4">
                <select id="projstatus" name="projstatus" class="form-control" , required="required">
                    <option selected disabled>--Select Status--</option>
                    <option>Active</option>
                    <option>InActive</option>
                </select>
                @Html.ValidationMessageFor(model => model.projstatus, "", new { @class = "text-danger" })
            </div>
            <div class="col-md-3"></div>
        </div>

        <div class="form-actions h4 text-center" style="padding:1em">
            <a class="badge badge-pill badge-success" onclick="document.getElementById('SubmitQuery').click();" style="cursor:pointer; color:white">Save</a>
            <input type="submit" id="SubmitQuery" style="display:none" class="float-right">
            @Html.ActionLink("Back", "ProjectDataIndex", new { sessionid = ViewBag.SessionID }, new { @class = "badge badge-pill badge-primary" })
        </div>
    </div>
}
<div class="text-danger">@ViewBag.errormssg</div>
@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
    @Scripts.Render("~/Scripts/select2.min.js")
    @Scripts.Render("~/Scripts/SharedScripts/search.live.js")
}
